#!/etc/ConsolePi/venv/bin/python3

""" Browse for other ConsolePis on the network """

import socket
from time import sleep
from typing import cast
import json
from threading import Thread

from zeroconf import ServiceBrowser, ServiceStateChange, Zeroconf
from consolepi.common import ConsolePi_Log


HOSTNAME = socket.gethostname()

class MDNS_Browser:

    def __init__(self, log=None):
        self.log = log if log is not None else ConsolePi_Log(do_print=False).set_log() 
        self.mdata = None
        self.stop = False
        # self.zc = self.run()
        self.run()

    def on_service_state_change(self,
        zeroconf: Zeroconf, service_type: str, name: str, state_change: ServiceStateChange) -> None:
        mdns_data = None
        log = self.log
        if state_change is ServiceStateChange.Added:
            info = zeroconf.get_service_info(service_type, name)
            if info:
                if info.server.split('.')[0] != HOSTNAME:
                    if __name__ == '__main__':
                        print("Server: %s Added" % (info.server.split('.')[0],))
                    else:
                        log.info('ConsolePi: {} Discovered via mdns'.format(info.server.split('.')[0]))
                    if info.properties:
                        properties = info.properties
                        hostname = properties[b'hostname'].decode("utf-8")
                        user = properties[b'user'].decode("utf-8")
                        interfaces = json.loads(properties[b'interfaces'].decode("utf-8"))
                        adapters = json.loads(properties[b'adapters'].decode("utf-8"))
                        mdns_data = {hostname: {'interfaces': interfaces, 'adapters': adapters, 'user': user}}
                        if __name__ == '__main__':
                            for key, value in info.properties.items():
                                print("    %s: %s" % (key, value))
                        else:
                            log.info('-mdns discovery- Final data set for {}:\n{}'.format(info.server.split('.')[0], mdns_data))
                    else:
                        log.warning('{}: No properties found'.format(info.server.split('.')[0]))
            else:
                log.warning('{}: No info found'.format(info.server.split('.')[0]))

            if mdns_data is not None:
                if self.mdata is None:
                    self.mdata = mdns_data
                else:
                    self.mdata[hostname] = mdns_data[hostname]

    def run(self):
        log = self.log
        zeroconf = Zeroconf()
        log.info("Discovering ConsolePis via mdns")
        browser = ServiceBrowser(zeroconf, "_consolepi._tcp.local.", handlers=[self.on_service_state_change])
        # while not self.stop:
        sleep(2.0)
        print('start')
        Thread(target=zeroconf.close())
        print('end')
        # return zeroconf

# if __name__ == '__main__':
#     zeroconf = Zeroconf()
#     print("\nBrowsing services, press Ctrl-C to exit...\n")
#     browser = ServiceBrowser(zeroconf, "_consolepi._tcp.local.", handlers=[on_service_state_change])

#     try:
#         while True:
#             sleep(0.1)
#     except KeyboardInterrupt:
#         pass
#     finally:
#         zeroconf.close()
