#!/etc/ConsolePi/venv/bin/python3

""" Example of browsing for a service (in this case, HTTP) """

import socket
from time import sleep
from typing import cast
import json

from zeroconf import ServiceBrowser, ServiceStateChange, Zeroconf
from consolepi.common import ConsolePi_Log

log = ConsolePi_Log(do_print=False).set_log()


def on_service_state_change(
    zeroconf: Zeroconf, service_type: str, name: str, state_change: ServiceStateChange
) -> None:
    if state_change is ServiceStateChange.Added:
        info = zeroconf.get_service_info(service_type, name)
        if info:
            if __name__ == '__main__':
                print("Server: %s Added" % (info.server,))
            else:
                log.info('ConsolePi: {} Discovered via mdns'.format(info.server))
            if info.properties:
                properties = info.properties
                hostname = properties[b'hostname'].decode("utf-8")
                user = properties[b'user'].decode("utf-8")
                interfaces = json.loads(properties[b'interfaces'].decode("utf-8"))
                adapters = json.loads(properties[b'adapters'].decode("utf-8"))
                data = {hostname: {'interfaces': interfaces, 'adapters': adapters, 'user': user}}
                if __name__ == '__main__':
                    for key, value in info.properties.items():
                        print("    %s: %s" % (key, value))
                else:
                    log.info('final data set for discovered ConsolePi {}\n{}'.format(info.server, data))
            else:
                log.warning('{}: No properties found'.format(info.server))
        else:
            log.warning('{}: No info found'.format(info.server))

def run():
    zeroconf = Zeroconf()
    log.info("Discovering ConsolePis via mdns")
    browser = ServiceBrowser(zeroconf, "_consolepi._tcp.local.", handlers=[on_service_state_change])
    return zeroconf

if __name__ == '__main__':
    zeroconf = Zeroconf()
    print("\nBrowsing services, press Ctrl-C to exit...\n")
    browser = ServiceBrowser(zeroconf, "_consolepi._tcp.local.", handlers=[on_service_state_change])

    try:
        while True:
            sleep(0.1)
    except KeyboardInterrupt:
        pass
    finally:
        zeroconf.close()
